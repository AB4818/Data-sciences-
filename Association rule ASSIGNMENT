{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPT/71HkyM7u8UD4cgrt0wq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"eBkvDif5p3G9","executionInfo":{"status":"ok","timestamp":1683084655175,"user_tz":-330,"elapsed":3,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}}},"outputs":[],"source":["# Import Libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from mlxtend.frequent_patterns import apriori,association_rules\n","from mlxtend.preprocessing import TransactionEncoder"]},{"cell_type":"code","source":["book=pd.read_csv(\"/content/book.csv\")\n","book"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"TMmMEutXqW7y","executionInfo":{"status":"ok","timestamp":1683084672515,"user_tz":-330,"elapsed":537,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"031cd8ef-7811-41a0-f61e-2e50d5648795"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ChildBks  YouthBks  CookBks  DoItYBks  RefBks  ArtBks  GeogBks  \\\n","0            0         1        0         1       0       0        1   \n","1            1         0        0         0       0       0        0   \n","2            0         0        0         0       0       0        0   \n","3            1         1        1         0       1       0        1   \n","4            0         0        1         0       0       0        1   \n","...        ...       ...      ...       ...     ...     ...      ...   \n","1995         0         0        1         0       0       1        1   \n","1996         0         0        0         0       0       0        0   \n","1997         0         0        0         0       0       0        0   \n","1998         0         0        1         0       0       0        0   \n","1999         0         0        0         0       0       0        0   \n","\n","      ItalCook  ItalAtlas  ItalArt  Florence  \n","0            0          0        0         0  \n","1            0          0        0         0  \n","2            0          0        0         0  \n","3            0          0        0         0  \n","4            0          0        0         0  \n","...        ...        ...      ...       ...  \n","1995         1          0        1         1  \n","1996         0          0        0         0  \n","1997         0          0        0         0  \n","1998         0          0        0         0  \n","1999         0          0        0         0  \n","\n","[2000 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-c034a9f4-74ca-4a08-ae06-db02b5697c8e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ChildBks</th>\n","      <th>YouthBks</th>\n","      <th>CookBks</th>\n","      <th>DoItYBks</th>\n","      <th>RefBks</th>\n","      <th>ArtBks</th>\n","      <th>GeogBks</th>\n","      <th>ItalCook</th>\n","      <th>ItalAtlas</th>\n","      <th>ItalArt</th>\n","      <th>Florence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows Ã— 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c034a9f4-74ca-4a08-ae06-db02b5697c8e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c034a9f4-74ca-4a08-ae06-db02b5697c8e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c034a9f4-74ca-4a08-ae06-db02b5697c8e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["Data preprocessing not required as it is already in transaction format\n","Apriori Algorithm\n","1) Association rules with 10% Support and 70% confidence"],"metadata":{"id":"KuynMosdqlfR"}},{"cell_type":"code","source":["# With 10% Support\n","frequent_itemsets=apriori(book,min_support=0.1,use_colnames=True)\n","frequent_itemsets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"JXXvA4I1qfSh","executionInfo":{"status":"ok","timestamp":1683084696450,"user_tz":-330,"elapsed":7,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"a7cf984b-c03f-4aad-ae1a-0a1a4b2e43e1"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                       itemsets\n","0    0.4230                     (ChildBks)\n","1    0.2475                     (YouthBks)\n","2    0.4310                      (CookBks)\n","3    0.2820                     (DoItYBks)\n","4    0.2145                       (RefBks)\n","5    0.2410                       (ArtBks)\n","6    0.2760                      (GeogBks)\n","7    0.1135                     (ItalCook)\n","8    0.1085                     (Florence)\n","9    0.1650           (YouthBks, ChildBks)\n","10   0.2560            (CookBks, ChildBks)\n","11   0.1840           (ChildBks, DoItYBks)\n","12   0.1515             (RefBks, ChildBks)\n","13   0.1625             (ArtBks, ChildBks)\n","14   0.1950            (ChildBks, GeogBks)\n","15   0.1620            (YouthBks, CookBks)\n","16   0.1155           (YouthBks, DoItYBks)\n","17   0.1010             (YouthBks, ArtBks)\n","18   0.1205            (YouthBks, GeogBks)\n","19   0.1875            (CookBks, DoItYBks)\n","20   0.1525              (CookBks, RefBks)\n","21   0.1670              (CookBks, ArtBks)\n","22   0.1925             (CookBks, GeogBks)\n","23   0.1135            (CookBks, ItalCook)\n","24   0.1055             (RefBks, DoItYBks)\n","25   0.1235             (ArtBks, DoItYBks)\n","26   0.1325            (GeogBks, DoItYBks)\n","27   0.1105              (RefBks, GeogBks)\n","28   0.1275              (ArtBks, GeogBks)\n","29   0.1290  (YouthBks, CookBks, ChildBks)\n","30   0.1460  (CookBks, ChildBks, DoItYBks)\n","31   0.1225    (CookBks, RefBks, ChildBks)\n","32   0.1265    (CookBks, ArtBks, ChildBks)\n","33   0.1495   (CookBks, ChildBks, GeogBks)\n","34   0.1045  (GeogBks, ChildBks, DoItYBks)\n","35   0.1020    (ArtBks, ChildBks, GeogBks)\n","36   0.1015    (CookBks, ArtBks, DoItYBks)\n","37   0.1085   (GeogBks, CookBks, DoItYBks)\n","38   0.1035     (CookBks, ArtBks, GeogBks)"],"text/html":["\n","  <div id=\"df-1a841900-8f38-4214-967f-cc6520fdcc18\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.4230</td>\n","      <td>(ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.2475</td>\n","      <td>(YouthBks)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.4310</td>\n","      <td>(CookBks)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.2820</td>\n","      <td>(DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.2145</td>\n","      <td>(RefBks)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.2410</td>\n","      <td>(ArtBks)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.2760</td>\n","      <td>(GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.1135</td>\n","      <td>(ItalCook)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.1085</td>\n","      <td>(Florence)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.1650</td>\n","      <td>(YouthBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.2560</td>\n","      <td>(CookBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.1840</td>\n","      <td>(ChildBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.1515</td>\n","      <td>(RefBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.1625</td>\n","      <td>(ArtBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.1950</td>\n","      <td>(ChildBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.1620</td>\n","      <td>(YouthBks, CookBks)</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.1155</td>\n","      <td>(YouthBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.1010</td>\n","      <td>(YouthBks, ArtBks)</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.1205</td>\n","      <td>(YouthBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.1875</td>\n","      <td>(CookBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.1525</td>\n","      <td>(CookBks, RefBks)</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>0.1670</td>\n","      <td>(CookBks, ArtBks)</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0.1925</td>\n","      <td>(CookBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.1135</td>\n","      <td>(CookBks, ItalCook)</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.1055</td>\n","      <td>(RefBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.1235</td>\n","      <td>(ArtBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.1325</td>\n","      <td>(GeogBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.1105</td>\n","      <td>(RefBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.1275</td>\n","      <td>(ArtBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0.1290</td>\n","      <td>(YouthBks, CookBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.1460</td>\n","      <td>(CookBks, ChildBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0.1225</td>\n","      <td>(CookBks, RefBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0.1265</td>\n","      <td>(CookBks, ArtBks, ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.1495</td>\n","      <td>(CookBks, ChildBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>0.1045</td>\n","      <td>(GeogBks, ChildBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0.1020</td>\n","      <td>(ArtBks, ChildBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>0.1015</td>\n","      <td>(CookBks, ArtBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0.1085</td>\n","      <td>(GeogBks, CookBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0.1035</td>\n","      <td>(CookBks, ArtBks, GeogBks)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a841900-8f38-4214-967f-cc6520fdcc18')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1a841900-8f38-4214-967f-cc6520fdcc18 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1a841900-8f38-4214-967f-cc6520fdcc18');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# with 70% confidence\n","rules=association_rules(frequent_itemsets,metric='lift',min_threshold=0.7)\n","rules"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"P4o_yMx-qlH2","executionInfo":{"status":"ok","timestamp":1683084725371,"user_tz":-330,"elapsed":467,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"c9eaf784-7829-45b8-cfa6-1a8c56b4c0ca"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           antecedents         consequents  antecedent support  \\\n","0           (YouthBks)          (ChildBks)              0.2475   \n","1           (ChildBks)          (YouthBks)              0.4230   \n","2            (CookBks)          (ChildBks)              0.4310   \n","3           (ChildBks)           (CookBks)              0.4230   \n","4           (ChildBks)          (DoItYBks)              0.4230   \n","..                 ...                 ...                 ...   \n","95  (CookBks, GeogBks)            (ArtBks)              0.1925   \n","96   (ArtBks, GeogBks)           (CookBks)              0.1275   \n","97           (CookBks)   (ArtBks, GeogBks)              0.4310   \n","98            (ArtBks)  (CookBks, GeogBks)              0.2410   \n","99           (GeogBks)   (CookBks, ArtBks)              0.2760   \n","\n","    consequent support  support  confidence      lift  leverage  conviction  \n","0               0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n","1               0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n","2               0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n","3               0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n","4               0.2820   0.1840    0.434988  1.542511  0.064714    1.270770  \n","..                 ...      ...         ...       ...       ...         ...  \n","95              0.2410   0.1035    0.537662  2.230964  0.057107    1.641657  \n","96              0.4310   0.1035    0.811765  1.883445  0.048547    3.022812  \n","97              0.1275   0.1035    0.240139  1.883445  0.048547    1.148237  \n","98              0.1925   0.1035    0.429461  2.230964  0.057107    1.415327  \n","99              0.1670   0.1035    0.375000  2.245509  0.057408    1.332800  \n","\n","[100 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f4ce5aa5-f242-488d-8fb3-a7d3d7b4bb41\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(YouthBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.2475</td>\n","      <td>0.4230</td>\n","      <td>0.1650</td>\n","      <td>0.666667</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.731000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(ChildBks)</td>\n","      <td>(YouthBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2475</td>\n","      <td>0.1650</td>\n","      <td>0.390071</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.233750</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(CookBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.4310</td>\n","      <td>0.4230</td>\n","      <td>0.2560</td>\n","      <td>0.593968</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.421069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.4230</td>\n","      <td>0.4310</td>\n","      <td>0.2560</td>\n","      <td>0.605201</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.441240</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(ChildBks)</td>\n","      <td>(DoItYBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2820</td>\n","      <td>0.1840</td>\n","      <td>0.434988</td>\n","      <td>1.542511</td>\n","      <td>0.064714</td>\n","      <td>1.270770</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>(CookBks, GeogBks)</td>\n","      <td>(ArtBks)</td>\n","      <td>0.1925</td>\n","      <td>0.2410</td>\n","      <td>0.1035</td>\n","      <td>0.537662</td>\n","      <td>2.230964</td>\n","      <td>0.057107</td>\n","      <td>1.641657</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>(ArtBks, GeogBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.1275</td>\n","      <td>0.4310</td>\n","      <td>0.1035</td>\n","      <td>0.811765</td>\n","      <td>1.883445</td>\n","      <td>0.048547</td>\n","      <td>3.022812</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>(CookBks)</td>\n","      <td>(ArtBks, GeogBks)</td>\n","      <td>0.4310</td>\n","      <td>0.1275</td>\n","      <td>0.1035</td>\n","      <td>0.240139</td>\n","      <td>1.883445</td>\n","      <td>0.048547</td>\n","      <td>1.148237</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>(ArtBks)</td>\n","      <td>(CookBks, GeogBks)</td>\n","      <td>0.2410</td>\n","      <td>0.1925</td>\n","      <td>0.1035</td>\n","      <td>0.429461</td>\n","      <td>2.230964</td>\n","      <td>0.057107</td>\n","      <td>1.415327</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>(GeogBks)</td>\n","      <td>(CookBks, ArtBks)</td>\n","      <td>0.2760</td>\n","      <td>0.1670</td>\n","      <td>0.1035</td>\n","      <td>0.375000</td>\n","      <td>2.245509</td>\n","      <td>0.057408</td>\n","      <td>1.332800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4ce5aa5-f242-488d-8fb3-a7d3d7b4bb41')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f4ce5aa5-f242-488d-8fb3-a7d3d7b4bb41 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f4ce5aa5-f242-488d-8fb3-a7d3d7b4bb41');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["rules.sort_values('lift',ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"uiqq6sx6qsZl","executionInfo":{"status":"ok","timestamp":1683084748554,"user_tz":-330,"elapsed":7,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"8a5dcca5-0798-448b-d211-15b456c80160"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           antecedents          consequents  antecedent support  \\\n","28           (CookBks)           (ItalCook)              0.4310   \n","29          (ItalCook)            (CookBks)              0.1135   \n","76  (ArtBks, ChildBks)            (GeogBks)              0.1625   \n","81           (GeogBks)   (ArtBks, ChildBks)              0.2760   \n","86            (ArtBks)  (CookBks, DoItYBks)              0.2410   \n","..                 ...                  ...                 ...   \n","5           (DoItYBks)           (ChildBks)              0.2820   \n","12          (YouthBks)            (CookBks)              0.2475   \n","13           (CookBks)           (YouthBks)              0.4310   \n","3           (ChildBks)            (CookBks)              0.4230   \n","2            (CookBks)           (ChildBks)              0.4310   \n","\n","    consequent support  support  confidence      lift  leverage  conviction  \n","28              0.1135   0.1135    0.263341  2.320186  0.064582    1.203406  \n","29              0.4310   0.1135    1.000000  2.320186  0.064582         inf  \n","76              0.2760   0.1020    0.627692  2.274247  0.057150    1.944628  \n","81              0.1625   0.1020    0.369565  2.274247  0.057150    1.328448  \n","86              0.1875   0.1015    0.421162  2.246196  0.056313    1.403674  \n","..                 ...      ...         ...       ...       ...         ...  \n","5               0.4230   0.1840    0.652482  1.542511  0.064714    1.660347  \n","12              0.4310   0.1620    0.654545  1.518667  0.055328    1.647105  \n","13              0.2475   0.1620    0.375870  1.518667  0.055328    1.205678  \n","3               0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n","2               0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n","\n","[100 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-02521120-489d-4bc0-aa90-ace0b0200944\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>28</th>\n","      <td>(CookBks)</td>\n","      <td>(ItalCook)</td>\n","      <td>0.4310</td>\n","      <td>0.1135</td>\n","      <td>0.1135</td>\n","      <td>0.263341</td>\n","      <td>2.320186</td>\n","      <td>0.064582</td>\n","      <td>1.203406</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>(ItalCook)</td>\n","      <td>(CookBks)</td>\n","      <td>0.1135</td>\n","      <td>0.4310</td>\n","      <td>0.1135</td>\n","      <td>1.000000</td>\n","      <td>2.320186</td>\n","      <td>0.064582</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>(ArtBks, ChildBks)</td>\n","      <td>(GeogBks)</td>\n","      <td>0.1625</td>\n","      <td>0.2760</td>\n","      <td>0.1020</td>\n","      <td>0.627692</td>\n","      <td>2.274247</td>\n","      <td>0.057150</td>\n","      <td>1.944628</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>(GeogBks)</td>\n","      <td>(ArtBks, ChildBks)</td>\n","      <td>0.2760</td>\n","      <td>0.1625</td>\n","      <td>0.1020</td>\n","      <td>0.369565</td>\n","      <td>2.274247</td>\n","      <td>0.057150</td>\n","      <td>1.328448</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>(ArtBks)</td>\n","      <td>(CookBks, DoItYBks)</td>\n","      <td>0.2410</td>\n","      <td>0.1875</td>\n","      <td>0.1015</td>\n","      <td>0.421162</td>\n","      <td>2.246196</td>\n","      <td>0.056313</td>\n","      <td>1.403674</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>(DoItYBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.2820</td>\n","      <td>0.4230</td>\n","      <td>0.1840</td>\n","      <td>0.652482</td>\n","      <td>1.542511</td>\n","      <td>0.064714</td>\n","      <td>1.660347</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>(YouthBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.2475</td>\n","      <td>0.4310</td>\n","      <td>0.1620</td>\n","      <td>0.654545</td>\n","      <td>1.518667</td>\n","      <td>0.055328</td>\n","      <td>1.647105</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>(CookBks)</td>\n","      <td>(YouthBks)</td>\n","      <td>0.4310</td>\n","      <td>0.2475</td>\n","      <td>0.1620</td>\n","      <td>0.375870</td>\n","      <td>1.518667</td>\n","      <td>0.055328</td>\n","      <td>1.205678</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.4230</td>\n","      <td>0.4310</td>\n","      <td>0.2560</td>\n","      <td>0.605201</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.441240</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(CookBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.4310</td>\n","      <td>0.4230</td>\n","      <td>0.2560</td>\n","      <td>0.593968</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.421069</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02521120-489d-4bc0-aa90-ace0b0200944')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-02521120-489d-4bc0-aa90-ace0b0200944 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-02521120-489d-4bc0-aa90-ace0b0200944');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Lift Ratio > 1 is a good influential rule in selecting the associated transactions\n","rules[rules.lift>1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"hrA5PfLjqyGc","executionInfo":{"status":"ok","timestamp":1683084757923,"user_tz":-330,"elapsed":6,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"7795fb0a-ff77-4f0c-a568-bb2e9c43708d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           antecedents         consequents  antecedent support  \\\n","0           (YouthBks)          (ChildBks)              0.2475   \n","1           (ChildBks)          (YouthBks)              0.4230   \n","2            (CookBks)          (ChildBks)              0.4310   \n","3           (ChildBks)           (CookBks)              0.4230   \n","4           (ChildBks)          (DoItYBks)              0.4230   \n","..                 ...                 ...                 ...   \n","95  (CookBks, GeogBks)            (ArtBks)              0.1925   \n","96   (ArtBks, GeogBks)           (CookBks)              0.1275   \n","97           (CookBks)   (ArtBks, GeogBks)              0.4310   \n","98            (ArtBks)  (CookBks, GeogBks)              0.2410   \n","99           (GeogBks)   (CookBks, ArtBks)              0.2760   \n","\n","    consequent support  support  confidence      lift  leverage  conviction  \n","0               0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n","1               0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n","2               0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n","3               0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n","4               0.2820   0.1840    0.434988  1.542511  0.064714    1.270770  \n","..                 ...      ...         ...       ...       ...         ...  \n","95              0.2410   0.1035    0.537662  2.230964  0.057107    1.641657  \n","96              0.4310   0.1035    0.811765  1.883445  0.048547    3.022812  \n","97              0.1275   0.1035    0.240139  1.883445  0.048547    1.148237  \n","98              0.1925   0.1035    0.429461  2.230964  0.057107    1.415327  \n","99              0.1670   0.1035    0.375000  2.245509  0.057408    1.332800  \n","\n","[100 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-930b170f-fa33-4704-9ce5-c9459207465b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(YouthBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.2475</td>\n","      <td>0.4230</td>\n","      <td>0.1650</td>\n","      <td>0.666667</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.731000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(ChildBks)</td>\n","      <td>(YouthBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2475</td>\n","      <td>0.1650</td>\n","      <td>0.390071</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.233750</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(CookBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.4310</td>\n","      <td>0.4230</td>\n","      <td>0.2560</td>\n","      <td>0.593968</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.421069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.4230</td>\n","      <td>0.4310</td>\n","      <td>0.2560</td>\n","      <td>0.605201</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.441240</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(ChildBks)</td>\n","      <td>(DoItYBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2820</td>\n","      <td>0.1840</td>\n","      <td>0.434988</td>\n","      <td>1.542511</td>\n","      <td>0.064714</td>\n","      <td>1.270770</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>(CookBks, GeogBks)</td>\n","      <td>(ArtBks)</td>\n","      <td>0.1925</td>\n","      <td>0.2410</td>\n","      <td>0.1035</td>\n","      <td>0.537662</td>\n","      <td>2.230964</td>\n","      <td>0.057107</td>\n","      <td>1.641657</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>(ArtBks, GeogBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.1275</td>\n","      <td>0.4310</td>\n","      <td>0.1035</td>\n","      <td>0.811765</td>\n","      <td>1.883445</td>\n","      <td>0.048547</td>\n","      <td>3.022812</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>(CookBks)</td>\n","      <td>(ArtBks, GeogBks)</td>\n","      <td>0.4310</td>\n","      <td>0.1275</td>\n","      <td>0.1035</td>\n","      <td>0.240139</td>\n","      <td>1.883445</td>\n","      <td>0.048547</td>\n","      <td>1.148237</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>(ArtBks)</td>\n","      <td>(CookBks, GeogBks)</td>\n","      <td>0.2410</td>\n","      <td>0.1925</td>\n","      <td>0.1035</td>\n","      <td>0.429461</td>\n","      <td>2.230964</td>\n","      <td>0.057107</td>\n","      <td>1.415327</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>(GeogBks)</td>\n","      <td>(CookBks, ArtBks)</td>\n","      <td>0.2760</td>\n","      <td>0.1670</td>\n","      <td>0.1035</td>\n","      <td>0.375000</td>\n","      <td>2.245509</td>\n","      <td>0.057408</td>\n","      <td>1.332800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-930b170f-fa33-4704-9ce5-c9459207465b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-930b170f-fa33-4704-9ce5-c9459207465b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-930b170f-fa33-4704-9ce5-c9459207465b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# visualization of obtained rule\n","plt.scatter(rules['support'],rules['confidence'])\n","plt.xlabel('support')\n","plt.ylabel('confidence') \n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"lfzq9pcPq0es","executionInfo":{"status":"ok","timestamp":1683084773334,"user_tz":-330,"elapsed":503,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"eb87afaf-a759-4575-8349-6a5a61bf140c"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# With 20% Support\n","frequent_itemsets2=apriori(book,min_support=0.20,use_colnames=True)\n","frequent_itemsets2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"pfqGEFHKq4JO","executionInfo":{"status":"ok","timestamp":1683084785421,"user_tz":-330,"elapsed":391,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"9185152e-f477-4ae1-c58e-fcfd5134306f"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   support             itemsets\n","0   0.4230           (ChildBks)\n","1   0.2475           (YouthBks)\n","2   0.4310            (CookBks)\n","3   0.2820           (DoItYBks)\n","4   0.2145             (RefBks)\n","5   0.2410             (ArtBks)\n","6   0.2760            (GeogBks)\n","7   0.2560  (CookBks, ChildBks)"],"text/html":["\n","  <div id=\"df-1911f977-1086-4671-b2ad-beaddfbbeded\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.4230</td>\n","      <td>(ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.2475</td>\n","      <td>(YouthBks)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.4310</td>\n","      <td>(CookBks)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.2820</td>\n","      <td>(DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.2145</td>\n","      <td>(RefBks)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.2410</td>\n","      <td>(ArtBks)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.2760</td>\n","      <td>(GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.2560</td>\n","      <td>(CookBks, ChildBks)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1911f977-1086-4671-b2ad-beaddfbbeded')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1911f977-1086-4671-b2ad-beaddfbbeded button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1911f977-1086-4671-b2ad-beaddfbbeded');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# With 60% confidence\n","rules2=association_rules(frequent_itemsets2,metric='lift',min_threshold=0.6)\n","rules2\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":156},"id":"rF1iM2dxq7IL","executionInfo":{"status":"ok","timestamp":1683084797134,"user_tz":-330,"elapsed":414,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"27fa4335-608a-40f4-b54c-79d5b5c536e5"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  antecedents consequents  antecedent support  consequent support  support  \\\n","0   (CookBks)  (ChildBks)               0.431               0.423    0.256   \n","1  (ChildBks)   (CookBks)               0.423               0.431    0.256   \n","\n","   confidence      lift  leverage  conviction  \n","0    0.593968  1.404179  0.073687    1.421069  \n","1    0.605201  1.404179  0.073687    1.441240  "],"text/html":["\n","  <div id=\"df-823e3dea-03dc-431a-ba12-58f4ed049d5b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(CookBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.431</td>\n","      <td>0.423</td>\n","      <td>0.256</td>\n","      <td>0.593968</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.421069</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.423</td>\n","      <td>0.431</td>\n","      <td>0.256</td>\n","      <td>0.605201</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.441240</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-823e3dea-03dc-431a-ba12-58f4ed049d5b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-823e3dea-03dc-431a-ba12-58f4ed049d5b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-823e3dea-03dc-431a-ba12-58f4ed049d5b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# visualization of obtained rule\n","plt.scatter(rules2['support'],rules2['confidence'])\n","plt.xlabel('support')\n","plt.ylabel('confidence') \n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"6HJyu5rGq97u","executionInfo":{"status":"ok","timestamp":1683084814806,"user_tz":-330,"elapsed":6,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"3258b054-542c-41bb-9608-a654b1475278"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# With 5% Support\n","frequent_itemsets3=apriori(book,min_support=0.05,use_colnames=True)\n","frequent_itemsets3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"h9REaaajrCU1","executionInfo":{"status":"ok","timestamp":1683084827796,"user_tz":-330,"elapsed":486,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"c8efa02a-4945-40aa-fb14-d9e62f14f656"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                                          itemsets\n","0    0.4230                                        (ChildBks)\n","1    0.2475                                        (YouthBks)\n","2    0.4310                                         (CookBks)\n","3    0.2820                                        (DoItYBks)\n","4    0.2145                                          (RefBks)\n","..      ...                                               ...\n","95   0.0600            (GeogBks, YouthBks, CookBks, DoItYBks)\n","96   0.0560              (YouthBks, CookBks, ArtBks, GeogBks)\n","97   0.0650              (GeogBks, CookBks, ArtBks, DoItYBks)\n","98   0.0510  (ChildBks, YouthBks, GeogBks, CookBks, DoItYBks)\n","99   0.0535    (ChildBks, GeogBks, CookBks, ArtBks, DoItYBks)\n","\n","[100 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1375273f-51d2-48ba-a5bb-d59e161733d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.4230</td>\n","      <td>(ChildBks)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.2475</td>\n","      <td>(YouthBks)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.4310</td>\n","      <td>(CookBks)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.2820</td>\n","      <td>(DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.2145</td>\n","      <td>(RefBks)</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>0.0600</td>\n","      <td>(GeogBks, YouthBks, CookBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>0.0560</td>\n","      <td>(YouthBks, CookBks, ArtBks, GeogBks)</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>0.0650</td>\n","      <td>(GeogBks, CookBks, ArtBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>0.0510</td>\n","      <td>(ChildBks, YouthBks, GeogBks, CookBks, DoItYBks)</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>0.0535</td>\n","      <td>(ChildBks, GeogBks, CookBks, ArtBks, DoItYBks)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows Ã— 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1375273f-51d2-48ba-a5bb-d59e161733d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1375273f-51d2-48ba-a5bb-d59e161733d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1375273f-51d2-48ba-a5bb-d59e161733d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# With 80% confidence\n","rules3=association_rules(frequent_itemsets3,metric='lift',min_threshold=0.8)\n","rules3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"IIZ1zSDKrFWB","executionInfo":{"status":"ok","timestamp":1683084839822,"user_tz":-330,"elapsed":5,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"da5e0916-68dd-45f0-9fb5-3bba24d8a8a6"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    antecedents                             consequents  antecedent support  \\\n","0    (YouthBks)                              (ChildBks)              0.2475   \n","1    (ChildBks)                              (YouthBks)              0.4230   \n","2     (CookBks)                              (ChildBks)              0.4310   \n","3    (ChildBks)                               (CookBks)              0.4230   \n","4    (ChildBks)                              (DoItYBks)              0.4230   \n","..          ...                                     ...                 ...   \n","657  (ChildBks)    (CookBks, ArtBks, DoItYBks, GeogBks)              0.4230   \n","658   (GeogBks)   (CookBks, ArtBks, ChildBks, DoItYBks)              0.2760   \n","659   (CookBks)   (ArtBks, ChildBks, DoItYBks, GeogBks)              0.4310   \n","660    (ArtBks)  (CookBks, ChildBks, DoItYBks, GeogBks)              0.2410   \n","661  (DoItYBks)    (CookBks, ArtBks, ChildBks, GeogBks)              0.2820   \n","\n","     consequent support  support  confidence      lift  leverage  conviction  \n","0                0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n","1                0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n","2                0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n","3                0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n","4                0.2820   0.1840    0.434988  1.542511  0.064714    1.270770  \n","..                  ...      ...         ...       ...       ...         ...  \n","657              0.0650   0.0535    0.126478  1.945808  0.026005    1.070379  \n","658              0.0820   0.0535    0.193841  2.363910  0.030868    1.138733  \n","659              0.0595   0.0535    0.124130  2.086217  0.027856    1.073789  \n","660              0.0890   0.0535    0.221992  2.494289  0.032051    1.170939  \n","661              0.0835   0.0535    0.189716  2.272052  0.029953    1.131085  \n","\n","[662 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-c875a513-05dc-4079-97e9-f75c2a5593e0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(YouthBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.2475</td>\n","      <td>0.4230</td>\n","      <td>0.1650</td>\n","      <td>0.666667</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.731000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(ChildBks)</td>\n","      <td>(YouthBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2475</td>\n","      <td>0.1650</td>\n","      <td>0.390071</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.233750</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(CookBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.4310</td>\n","      <td>0.4230</td>\n","      <td>0.2560</td>\n","      <td>0.593968</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.421069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.4230</td>\n","      <td>0.4310</td>\n","      <td>0.2560</td>\n","      <td>0.605201</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.441240</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(ChildBks)</td>\n","      <td>(DoItYBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2820</td>\n","      <td>0.1840</td>\n","      <td>0.434988</td>\n","      <td>1.542511</td>\n","      <td>0.064714</td>\n","      <td>1.270770</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>657</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks, ArtBks, DoItYBks, GeogBks)</td>\n","      <td>0.4230</td>\n","      <td>0.0650</td>\n","      <td>0.0535</td>\n","      <td>0.126478</td>\n","      <td>1.945808</td>\n","      <td>0.026005</td>\n","      <td>1.070379</td>\n","    </tr>\n","    <tr>\n","      <th>658</th>\n","      <td>(GeogBks)</td>\n","      <td>(CookBks, ArtBks, ChildBks, DoItYBks)</td>\n","      <td>0.2760</td>\n","      <td>0.0820</td>\n","      <td>0.0535</td>\n","      <td>0.193841</td>\n","      <td>2.363910</td>\n","      <td>0.030868</td>\n","      <td>1.138733</td>\n","    </tr>\n","    <tr>\n","      <th>659</th>\n","      <td>(CookBks)</td>\n","      <td>(ArtBks, ChildBks, DoItYBks, GeogBks)</td>\n","      <td>0.4310</td>\n","      <td>0.0595</td>\n","      <td>0.0535</td>\n","      <td>0.124130</td>\n","      <td>2.086217</td>\n","      <td>0.027856</td>\n","      <td>1.073789</td>\n","    </tr>\n","    <tr>\n","      <th>660</th>\n","      <td>(ArtBks)</td>\n","      <td>(CookBks, ChildBks, DoItYBks, GeogBks)</td>\n","      <td>0.2410</td>\n","      <td>0.0890</td>\n","      <td>0.0535</td>\n","      <td>0.221992</td>\n","      <td>2.494289</td>\n","      <td>0.032051</td>\n","      <td>1.170939</td>\n","    </tr>\n","    <tr>\n","      <th>661</th>\n","      <td>(DoItYBks)</td>\n","      <td>(CookBks, ArtBks, ChildBks, GeogBks)</td>\n","      <td>0.2820</td>\n","      <td>0.0835</td>\n","      <td>0.0535</td>\n","      <td>0.189716</td>\n","      <td>2.272052</td>\n","      <td>0.029953</td>\n","      <td>1.131085</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>662 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c875a513-05dc-4079-97e9-f75c2a5593e0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c875a513-05dc-4079-97e9-f75c2a5593e0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c875a513-05dc-4079-97e9-f75c2a5593e0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["rules3[rules3.lift>1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"bq-fFyszrIcp","executionInfo":{"status":"ok","timestamp":1683084848326,"user_tz":-330,"elapsed":6,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"b728a6cf-b219-4c4d-cf87-e5333d5934ab"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    antecedents                             consequents  antecedent support  \\\n","0    (YouthBks)                              (ChildBks)              0.2475   \n","1    (ChildBks)                              (YouthBks)              0.4230   \n","2     (CookBks)                              (ChildBks)              0.4310   \n","3    (ChildBks)                               (CookBks)              0.4230   \n","4    (ChildBks)                              (DoItYBks)              0.4230   \n","..          ...                                     ...                 ...   \n","657  (ChildBks)    (CookBks, ArtBks, DoItYBks, GeogBks)              0.4230   \n","658   (GeogBks)   (CookBks, ArtBks, ChildBks, DoItYBks)              0.2760   \n","659   (CookBks)   (ArtBks, ChildBks, DoItYBks, GeogBks)              0.4310   \n","660    (ArtBks)  (CookBks, ChildBks, DoItYBks, GeogBks)              0.2410   \n","661  (DoItYBks)    (CookBks, ArtBks, ChildBks, GeogBks)              0.2820   \n","\n","     consequent support  support  confidence      lift  leverage  conviction  \n","0                0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n","1                0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n","2                0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n","3                0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n","4                0.2820   0.1840    0.434988  1.542511  0.064714    1.270770  \n","..                  ...      ...         ...       ...       ...         ...  \n","657              0.0650   0.0535    0.126478  1.945808  0.026005    1.070379  \n","658              0.0820   0.0535    0.193841  2.363910  0.030868    1.138733  \n","659              0.0595   0.0535    0.124130  2.086217  0.027856    1.073789  \n","660              0.0890   0.0535    0.221992  2.494289  0.032051    1.170939  \n","661              0.0835   0.0535    0.189716  2.272052  0.029953    1.131085  \n","\n","[662 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-cda8455b-9b9e-4f8c-b8c6-7261571bbec5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(YouthBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.2475</td>\n","      <td>0.4230</td>\n","      <td>0.1650</td>\n","      <td>0.666667</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.731000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(ChildBks)</td>\n","      <td>(YouthBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2475</td>\n","      <td>0.1650</td>\n","      <td>0.390071</td>\n","      <td>1.576044</td>\n","      <td>0.060308</td>\n","      <td>1.233750</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(CookBks)</td>\n","      <td>(ChildBks)</td>\n","      <td>0.4310</td>\n","      <td>0.4230</td>\n","      <td>0.2560</td>\n","      <td>0.593968</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.421069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks)</td>\n","      <td>0.4230</td>\n","      <td>0.4310</td>\n","      <td>0.2560</td>\n","      <td>0.605201</td>\n","      <td>1.404179</td>\n","      <td>0.073687</td>\n","      <td>1.441240</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(ChildBks)</td>\n","      <td>(DoItYBks)</td>\n","      <td>0.4230</td>\n","      <td>0.2820</td>\n","      <td>0.1840</td>\n","      <td>0.434988</td>\n","      <td>1.542511</td>\n","      <td>0.064714</td>\n","      <td>1.270770</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>657</th>\n","      <td>(ChildBks)</td>\n","      <td>(CookBks, ArtBks, DoItYBks, GeogBks)</td>\n","      <td>0.4230</td>\n","      <td>0.0650</td>\n","      <td>0.0535</td>\n","      <td>0.126478</td>\n","      <td>1.945808</td>\n","      <td>0.026005</td>\n","      <td>1.070379</td>\n","    </tr>\n","    <tr>\n","      <th>658</th>\n","      <td>(GeogBks)</td>\n","      <td>(CookBks, ArtBks, ChildBks, DoItYBks)</td>\n","      <td>0.2760</td>\n","      <td>0.0820</td>\n","      <td>0.0535</td>\n","      <td>0.193841</td>\n","      <td>2.363910</td>\n","      <td>0.030868</td>\n","      <td>1.138733</td>\n","    </tr>\n","    <tr>\n","      <th>659</th>\n","      <td>(CookBks)</td>\n","      <td>(ArtBks, ChildBks, DoItYBks, GeogBks)</td>\n","      <td>0.4310</td>\n","      <td>0.0595</td>\n","      <td>0.0535</td>\n","      <td>0.124130</td>\n","      <td>2.086217</td>\n","      <td>0.027856</td>\n","      <td>1.073789</td>\n","    </tr>\n","    <tr>\n","      <th>660</th>\n","      <td>(ArtBks)</td>\n","      <td>(CookBks, ChildBks, DoItYBks, GeogBks)</td>\n","      <td>0.2410</td>\n","      <td>0.0890</td>\n","      <td>0.0535</td>\n","      <td>0.221992</td>\n","      <td>2.494289</td>\n","      <td>0.032051</td>\n","      <td>1.170939</td>\n","    </tr>\n","    <tr>\n","      <th>661</th>\n","      <td>(DoItYBks)</td>\n","      <td>(CookBks, ArtBks, ChildBks, GeogBks)</td>\n","      <td>0.2820</td>\n","      <td>0.0835</td>\n","      <td>0.0535</td>\n","      <td>0.189716</td>\n","      <td>2.272052</td>\n","      <td>0.029953</td>\n","      <td>1.131085</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>662 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cda8455b-9b9e-4f8c-b8c6-7261571bbec5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cda8455b-9b9e-4f8c-b8c6-7261571bbec5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cda8455b-9b9e-4f8c-b8c6-7261571bbec5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# visualization of obtained rule\n","plt.scatter(rules3['support'],rules3['confidence'])\n","plt.xlabel('support')\n","plt.ylabel('confidence') \n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"Xnv5GfGirKh5","executionInfo":{"status":"ok","timestamp":1683084856733,"user_tz":-330,"elapsed":11,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"9349a08d-28bc-4767-d18d-8f01f7e09404"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Question 2"],"metadata":{"id":"unyeW7_erXTJ"}},{"cell_type":"code","source":["# Import Libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from mlxtend.frequent_patterns import apriori,association_rules\n","from mlxtend.preprocessing import TransactionEncoder"],"metadata":{"id":"S7UBUvarrMc_","executionInfo":{"status":"ok","timestamp":1683084927757,"user_tz":-330,"elapsed":1,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["#import dataset\n","movie=pd.read_csv(\"/content/my_movies.csv\")\n","movie"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":566},"id":"auMJmrYUrd_J","executionInfo":{"status":"ok","timestamp":1683084969956,"user_tz":-330,"elapsed":425,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"717a0cc1-bb73-4b2b-ab3c-bde7858a51ce"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              V1             V2             V3          V4     V5  \\\n","0    Sixth Sense          LOTR1  Harry Potter1  Green Mile  LOTR2   \n","1      Gladiator        Patriot     Braveheart         NaN    NaN   \n","2          LOTR1          LOTR2            NaN         NaN    NaN   \n","3      Gladiator        Patriot    Sixth Sense         NaN    NaN   \n","4      Gladiator        Patriot    Sixth Sense         NaN    NaN   \n","5      Gladiator        Patriot    Sixth Sense         NaN    NaN   \n","6  Harry Potter1  Harry Potter2            NaN         NaN    NaN   \n","7      Gladiator        Patriot            NaN         NaN    NaN   \n","8      Gladiator        Patriot    Sixth Sense         NaN    NaN   \n","9    Sixth Sense           LOTR      Gladiator  Green Mile    NaN   \n","\n","   Sixth Sense  Gladiator  LOTR1  Harry Potter1  Patriot  LOTR2  \\\n","0            1          0      1              1        0      1   \n","1            0          1      0              0        1      0   \n","2            0          0      1              0        0      1   \n","3            1          1      0              0        1      0   \n","4            1          1      0              0        1      0   \n","5            1          1      0              0        1      0   \n","6            0          0      0              1        0      0   \n","7            0          1      0              0        1      0   \n","8            1          1      0              0        1      0   \n","9            1          1      0              0        0      0   \n","\n","   Harry Potter2  LOTR  Braveheart  Green Mile  \n","0              0     0           0           1  \n","1              0     0           1           0  \n","2              0     0           0           0  \n","3              0     0           0           0  \n","4              0     0           0           0  \n","5              0     0           0           0  \n","6              1     0           0           0  \n","7              0     0           0           0  \n","8              0     0           0           0  \n","9              0     1           0           1  "],"text/html":["\n","  <div id=\"df-353bf107-106f-47ea-b9c6-4a9abdd6ea11\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>Sixth Sense</th>\n","      <th>Gladiator</th>\n","      <th>LOTR1</th>\n","      <th>Harry Potter1</th>\n","      <th>Patriot</th>\n","      <th>LOTR2</th>\n","      <th>Harry Potter2</th>\n","      <th>LOTR</th>\n","      <th>Braveheart</th>\n","      <th>Green Mile</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sixth Sense</td>\n","      <td>LOTR1</td>\n","      <td>Harry Potter1</td>\n","      <td>Green Mile</td>\n","      <td>LOTR2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Gladiator</td>\n","      <td>Patriot</td>\n","      <td>Braveheart</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LOTR1</td>\n","      <td>LOTR2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gladiator</td>\n","      <td>Patriot</td>\n","      <td>Sixth Sense</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Gladiator</td>\n","      <td>Patriot</td>\n","      <td>Sixth Sense</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Gladiator</td>\n","      <td>Patriot</td>\n","      <td>Sixth Sense</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Harry Potter1</td>\n","      <td>Harry Potter2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Gladiator</td>\n","      <td>Patriot</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Gladiator</td>\n","      <td>Patriot</td>\n","      <td>Sixth Sense</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Sixth Sense</td>\n","      <td>LOTR</td>\n","      <td>Gladiator</td>\n","      <td>Green Mile</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-353bf107-106f-47ea-b9c6-4a9abdd6ea11')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-353bf107-106f-47ea-b9c6-4a9abdd6ea11 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-353bf107-106f-47ea-b9c6-4a9abdd6ea11');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["movie.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"htqAQnUGroIK","executionInfo":{"status":"ok","timestamp":1683085024290,"user_tz":-330,"elapsed":394,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"232b1394-3af4-4bd0-82f6-99a44cef5cde"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 15)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["movie.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u_RHYZ9kr1YU","executionInfo":{"status":"ok","timestamp":1683085031656,"user_tz":-330,"elapsed":4,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"53ff8a28-f6bf-4d44-9b11-353a15e2b1f4"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10 entries, 0 to 9\n","Data columns (total 15 columns):\n"," #   Column         Non-Null Count  Dtype \n","---  ------         --------------  ----- \n"," 0   V1             10 non-null     object\n"," 1   V2             10 non-null     object\n"," 2   V3             7 non-null      object\n"," 3   V4             2 non-null      object\n"," 4   V5             1 non-null      object\n"," 5   Sixth Sense    10 non-null     int64 \n"," 6   Gladiator      10 non-null     int64 \n"," 7   LOTR1          10 non-null     int64 \n"," 8   Harry Potter1  10 non-null     int64 \n"," 9   Patriot        10 non-null     int64 \n"," 10  LOTR2          10 non-null     int64 \n"," 11  Harry Potter2  10 non-null     int64 \n"," 12  LOTR           10 non-null     int64 \n"," 13  Braveheart     10 non-null     int64 \n"," 14  Green Mile     10 non-null     int64 \n","dtypes: int64(10), object(5)\n","memory usage: 1.3+ KB\n"]}]},{"cell_type":"code","source":["movie2=movie.iloc[:,5:]\n","movie2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"unLIeCtLr3NE","executionInfo":{"status":"ok","timestamp":1683085041522,"user_tz":-330,"elapsed":7,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"608456cc-56d4-4702-bc47-527bc0c01c7a"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Sixth Sense  Gladiator  LOTR1  Harry Potter1  Patriot  LOTR2  \\\n","0            1          0      1              1        0      1   \n","1            0          1      0              0        1      0   \n","2            0          0      1              0        0      1   \n","3            1          1      0              0        1      0   \n","4            1          1      0              0        1      0   \n","5            1          1      0              0        1      0   \n","6            0          0      0              1        0      0   \n","7            0          1      0              0        1      0   \n","8            1          1      0              0        1      0   \n","9            1          1      0              0        0      0   \n","\n","   Harry Potter2  LOTR  Braveheart  Green Mile  \n","0              0     0           0           1  \n","1              0     0           1           0  \n","2              0     0           0           0  \n","3              0     0           0           0  \n","4              0     0           0           0  \n","5              0     0           0           0  \n","6              1     0           0           0  \n","7              0     0           0           0  \n","8              0     0           0           0  \n","9              0     1           0           1  "],"text/html":["\n","  <div id=\"df-87fb3a17-29cb-4bc2-91e2-e7316e964081\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sixth Sense</th>\n","      <th>Gladiator</th>\n","      <th>LOTR1</th>\n","      <th>Harry Potter1</th>\n","      <th>Patriot</th>\n","      <th>LOTR2</th>\n","      <th>Harry Potter2</th>\n","      <th>LOTR</th>\n","      <th>Braveheart</th>\n","      <th>Green Mile</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87fb3a17-29cb-4bc2-91e2-e7316e964081')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-87fb3a17-29cb-4bc2-91e2-e7316e964081 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-87fb3a17-29cb-4bc2-91e2-e7316e964081');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# with 10% support\n","frequent_itemsets=apriori(movie2,min_support=0.1,use_colnames=True)\n","frequent_itemsets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"td48flizr5rp","executionInfo":{"status":"ok","timestamp":1683085050500,"user_tz":-330,"elapsed":5,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"7f4cae67-918e-499b-c9dc-ad2e3c48757a"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                                           itemsets\n","0       0.6                                      (Sixth Sense)\n","1       0.7                                        (Gladiator)\n","2       0.2                                            (LOTR1)\n","3       0.2                                    (Harry Potter1)\n","4       0.6                                          (Patriot)\n","5       0.2                                            (LOTR2)\n","6       0.1                                    (Harry Potter2)\n","7       0.1                                             (LOTR)\n","8       0.1                                       (Braveheart)\n","9       0.2                                       (Green Mile)\n","10      0.5                           (Gladiator, Sixth Sense)\n","11      0.1                               (Sixth Sense, LOTR1)\n","12      0.1                       (Harry Potter1, Sixth Sense)\n","13      0.4                             (Sixth Sense, Patriot)\n","14      0.1                               (LOTR2, Sixth Sense)\n","15      0.1                                (Sixth Sense, LOTR)\n","16      0.2                          (Green Mile, Sixth Sense)\n","17      0.6                               (Gladiator, Patriot)\n","18      0.1                                  (Gladiator, LOTR)\n","19      0.1                            (Braveheart, Gladiator)\n","20      0.1                            (Gladiator, Green Mile)\n","21      0.1                             (Harry Potter1, LOTR1)\n","22      0.2                                     (LOTR2, LOTR1)\n","23      0.1                                (Green Mile, LOTR1)\n","24      0.1                             (LOTR2, Harry Potter1)\n","25      0.1                     (Harry Potter1, Harry Potter2)\n","26      0.1                        (Harry Potter1, Green Mile)\n","27      0.1                              (Braveheart, Patriot)\n","28      0.1                                (LOTR2, Green Mile)\n","29      0.1                                 (Green Mile, LOTR)\n","30      0.4                  (Gladiator, Sixth Sense, Patriot)\n","31      0.1                     (Gladiator, Sixth Sense, LOTR)\n","32      0.1               (Green Mile, Gladiator, Sixth Sense)\n","33      0.1                (Harry Potter1, Sixth Sense, LOTR1)\n","34      0.1                        (LOTR2, Sixth Sense, LOTR1)\n","35      0.1                   (Green Mile, Sixth Sense, LOTR1)\n","36      0.1                (LOTR2, Harry Potter1, Sixth Sense)\n","37      0.1           (Green Mile, Harry Potter1, Sixth Sense)\n","38      0.1                   (LOTR2, Green Mile, Sixth Sense)\n","39      0.1                    (Green Mile, Sixth Sense, LOTR)\n","40      0.1                   (Braveheart, Gladiator, Patriot)\n","41      0.1                      (Gladiator, Green Mile, LOTR)\n","42      0.1                      (LOTR2, Harry Potter1, LOTR1)\n","43      0.1                 (Harry Potter1, Green Mile, LOTR1)\n","44      0.1                         (LOTR2, Green Mile, LOTR1)\n","45      0.1                 (LOTR2, Harry Potter1, Green Mile)\n","46      0.1         (Green Mile, Gladiator, Sixth Sense, LOTR)\n","47      0.1         (LOTR2, Harry Potter1, Sixth Sense, LOTR1)\n","48      0.1    (Green Mile, Harry Potter1, Sixth Sense, LOTR1)\n","49      0.1            (LOTR2, Green Mile, Sixth Sense, LOTR1)\n","50      0.1    (LOTR2, Green Mile, Harry Potter1, Sixth Sense)\n","51      0.1          (LOTR2, Harry Potter1, Green Mile, LOTR1)\n","52      0.1  (Green Mile, LOTR1, Sixth Sense, LOTR2, Harry ..."],"text/html":["\n","  <div id=\"df-28a90f85-7645-4f5e-8d8c-0c9d017890ba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.6</td>\n","      <td>(Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.7</td>\n","      <td>(Gladiator)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.2</td>\n","      <td>(LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.2</td>\n","      <td>(Harry Potter1)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.6</td>\n","      <td>(Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.2</td>\n","      <td>(LOTR2)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter2)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.1</td>\n","      <td>(LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.1</td>\n","      <td>(Braveheart)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.2</td>\n","      <td>(Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.5</td>\n","      <td>(Gladiator, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.1</td>\n","      <td>(Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.4</td>\n","      <td>(Sixth Sense, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.1</td>\n","      <td>(Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.2</td>\n","      <td>(Green Mile, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.6</td>\n","      <td>(Gladiator, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.1</td>\n","      <td>(Braveheart, Gladiator)</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0.2</td>\n","      <td>(LOTR2, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1)</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Harry Potter2)</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.1</td>\n","      <td>(Braveheart, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.4</td>\n","      <td>(Gladiator, Sixth Sense, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Gladiator, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>0.1</td>\n","      <td>(Braveheart, Gladiator, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, Green Mile, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Gladiator, Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Harry Potter1, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, LOTR1, Sixth Sense, LOTR2, Harry ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28a90f85-7645-4f5e-8d8c-0c9d017890ba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-28a90f85-7645-4f5e-8d8c-0c9d017890ba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-28a90f85-7645-4f5e-8d8c-0c9d017890ba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# 70% confidence\n","rules=association_rules(frequent_itemsets,metric='lift',min_threshold=0.7)\n","rules"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"t6B33nZor74W","executionInfo":{"status":"ok","timestamp":1683085060414,"user_tz":-330,"elapsed":412,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"face997c-ea50-4c04-8bad-23e11774e56b"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         antecedents                                      consequents  \\\n","0        (Gladiator)                                    (Sixth Sense)   \n","1      (Sixth Sense)                                      (Gladiator)   \n","2      (Sixth Sense)                                          (LOTR1)   \n","3            (LOTR1)                                    (Sixth Sense)   \n","4    (Harry Potter1)                                    (Sixth Sense)   \n","..               ...                                              ...   \n","245     (Green Mile)       (LOTR2, Harry Potter1, Sixth Sense, LOTR1)   \n","246          (LOTR1)  (LOTR2, Harry Potter1, Green Mile, Sixth Sense)   \n","247    (Sixth Sense)        (LOTR2, Harry Potter1, Green Mile, LOTR1)   \n","248          (LOTR2)  (Harry Potter1, Green Mile, Sixth Sense, LOTR1)   \n","249  (Harry Potter1)          (LOTR2, Green Mile, Sixth Sense, LOTR1)   \n","\n","     antecedent support  consequent support  support  confidence      lift  \\\n","0                   0.7                 0.6      0.5    0.714286  1.190476   \n","1                   0.6                 0.7      0.5    0.833333  1.190476   \n","2                   0.6                 0.2      0.1    0.166667  0.833333   \n","3                   0.2                 0.6      0.1    0.500000  0.833333   \n","4                   0.2                 0.6      0.1    0.500000  0.833333   \n","..                  ...                 ...      ...         ...       ...   \n","245                 0.2                 0.1      0.1    0.500000  5.000000   \n","246                 0.2                 0.1      0.1    0.500000  5.000000   \n","247                 0.6                 0.1      0.1    0.166667  1.666667   \n","248                 0.2                 0.1      0.1    0.500000  5.000000   \n","249                 0.2                 0.1      0.1    0.500000  5.000000   \n","\n","     leverage  conviction  \n","0        0.08        1.40  \n","1        0.08        1.80  \n","2       -0.02        0.96  \n","3       -0.02        0.80  \n","4       -0.02        0.80  \n","..        ...         ...  \n","245      0.08        1.80  \n","246      0.08        1.80  \n","247      0.04        1.08  \n","248      0.08        1.80  \n","249      0.08        1.80  \n","\n","[250 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-b86032a3-1b0e-4749-93d0-c01877c8df7e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(Gladiator)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.7</td>\n","      <td>0.6</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Gladiator)</td>\n","      <td>0.6</td>\n","      <td>0.7</td>\n","      <td>0.5</td>\n","      <td>0.833333</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR1)</td>\n","      <td>0.6</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>0.833333</td>\n","      <td>-0.02</td>\n","      <td>0.96</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(LOTR1)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.2</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>0.833333</td>\n","      <td>-0.02</td>\n","      <td>0.80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(Harry Potter1)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.2</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>0.833333</td>\n","      <td>-0.02</td>\n","      <td>0.80</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>(Green Mile)</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>(LOTR1)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, Sixth Sense)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, LOTR1)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>(LOTR2)</td>\n","      <td>(Harry Potter1, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>249</th>\n","      <td>(Harry Potter1)</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>250 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b86032a3-1b0e-4749-93d0-c01877c8df7e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b86032a3-1b0e-4749-93d0-c01877c8df7e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b86032a3-1b0e-4749-93d0-c01877c8df7e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# Lift Ratio > 1 is a good influential rule in selecting the associated transactions\n","rules[rules.lift>1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"1-bcY0ZQr-MF","executionInfo":{"status":"ok","timestamp":1683085070721,"user_tz":-330,"elapsed":4,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"692336a2-5b20-4083-d01e-7e76f78a0b34"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         antecedents                                      consequents  \\\n","0        (Gladiator)                                    (Sixth Sense)   \n","1      (Sixth Sense)                                      (Gladiator)   \n","6      (Sixth Sense)                                        (Patriot)   \n","7          (Patriot)                                    (Sixth Sense)   \n","10     (Sixth Sense)                                           (LOTR)   \n","..               ...                                              ...   \n","245     (Green Mile)       (LOTR2, Harry Potter1, Sixth Sense, LOTR1)   \n","246          (LOTR1)  (LOTR2, Harry Potter1, Green Mile, Sixth Sense)   \n","247    (Sixth Sense)        (LOTR2, Harry Potter1, Green Mile, LOTR1)   \n","248          (LOTR2)  (Harry Potter1, Green Mile, Sixth Sense, LOTR1)   \n","249  (Harry Potter1)          (LOTR2, Green Mile, Sixth Sense, LOTR1)   \n","\n","     antecedent support  consequent support  support  confidence      lift  \\\n","0                   0.7                 0.6      0.5    0.714286  1.190476   \n","1                   0.6                 0.7      0.5    0.833333  1.190476   \n","6                   0.6                 0.6      0.4    0.666667  1.111111   \n","7                   0.6                 0.6      0.4    0.666667  1.111111   \n","10                  0.6                 0.1      0.1    0.166667  1.666667   \n","..                  ...                 ...      ...         ...       ...   \n","245                 0.2                 0.1      0.1    0.500000  5.000000   \n","246                 0.2                 0.1      0.1    0.500000  5.000000   \n","247                 0.6                 0.1      0.1    0.166667  1.666667   \n","248                 0.2                 0.1      0.1    0.500000  5.000000   \n","249                 0.2                 0.1      0.1    0.500000  5.000000   \n","\n","     leverage  conviction  \n","0        0.08        1.40  \n","1        0.08        1.80  \n","6        0.04        1.20  \n","7        0.04        1.20  \n","10       0.04        1.08  \n","..        ...         ...  \n","245      0.08        1.80  \n","246      0.08        1.80  \n","247      0.04        1.08  \n","248      0.08        1.80  \n","249      0.08        1.80  \n","\n","[236 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-c7aa8562-3523-4d97-a3e4-3198ae969d67\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(Gladiator)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.7</td>\n","      <td>0.6</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Gladiator)</td>\n","      <td>0.6</td>\n","      <td>0.7</td>\n","      <td>0.5</td>\n","      <td>0.833333</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Patriot)</td>\n","      <td>0.6</td>\n","      <td>0.6</td>\n","      <td>0.4</td>\n","      <td>0.666667</td>\n","      <td>1.111111</td>\n","      <td>0.04</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>(Patriot)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.6</td>\n","      <td>0.6</td>\n","      <td>0.4</td>\n","      <td>0.666667</td>\n","      <td>1.111111</td>\n","      <td>0.04</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>(Green Mile)</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>(LOTR1)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, Sixth Sense)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, LOTR1)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>(LOTR2)</td>\n","      <td>(Harry Potter1, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>249</th>\n","      <td>(Harry Potter1)</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>236 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7aa8562-3523-4d97-a3e4-3198ae969d67')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c7aa8562-3523-4d97-a3e4-3198ae969d67 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c7aa8562-3523-4d97-a3e4-3198ae969d67');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# visualization of obtained rule\n","plt.scatter(rules['support'],rules['confidence'])\n","plt.xlabel('support')\n","plt.ylabel('confidence')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"HPtlNKsXsA04","executionInfo":{"status":"ok","timestamp":1683085079238,"user_tz":-330,"elapsed":824,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"667652b7-9a29-4114-f7b5-ce672e50372f"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# with 5% support\n","frequent_itemsets2=apriori(movie2,min_support=0.05,use_colnames=True)\n","frequent_itemsets2\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"sgNJWAgtsCtY","executionInfo":{"status":"ok","timestamp":1683085105637,"user_tz":-330,"elapsed":511,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"e1c9abed-2873-42c0-b4bb-391d4cb92e5e"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                                           itemsets\n","0       0.6                                      (Sixth Sense)\n","1       0.7                                        (Gladiator)\n","2       0.2                                            (LOTR1)\n","3       0.2                                    (Harry Potter1)\n","4       0.6                                          (Patriot)\n","5       0.2                                            (LOTR2)\n","6       0.1                                    (Harry Potter2)\n","7       0.1                                             (LOTR)\n","8       0.1                                       (Braveheart)\n","9       0.2                                       (Green Mile)\n","10      0.5                           (Gladiator, Sixth Sense)\n","11      0.1                               (Sixth Sense, LOTR1)\n","12      0.1                       (Harry Potter1, Sixth Sense)\n","13      0.4                             (Sixth Sense, Patriot)\n","14      0.1                               (LOTR2, Sixth Sense)\n","15      0.1                                (Sixth Sense, LOTR)\n","16      0.2                          (Green Mile, Sixth Sense)\n","17      0.6                               (Gladiator, Patriot)\n","18      0.1                                  (Gladiator, LOTR)\n","19      0.1                            (Braveheart, Gladiator)\n","20      0.1                            (Gladiator, Green Mile)\n","21      0.1                             (Harry Potter1, LOTR1)\n","22      0.2                                     (LOTR2, LOTR1)\n","23      0.1                                (Green Mile, LOTR1)\n","24      0.1                             (LOTR2, Harry Potter1)\n","25      0.1                     (Harry Potter1, Harry Potter2)\n","26      0.1                        (Harry Potter1, Green Mile)\n","27      0.1                              (Braveheart, Patriot)\n","28      0.1                                (LOTR2, Green Mile)\n","29      0.1                                 (Green Mile, LOTR)\n","30      0.4                  (Gladiator, Sixth Sense, Patriot)\n","31      0.1                     (Gladiator, Sixth Sense, LOTR)\n","32      0.1               (Green Mile, Gladiator, Sixth Sense)\n","33      0.1                (Harry Potter1, Sixth Sense, LOTR1)\n","34      0.1                        (LOTR2, Sixth Sense, LOTR1)\n","35      0.1                   (Green Mile, Sixth Sense, LOTR1)\n","36      0.1                (LOTR2, Harry Potter1, Sixth Sense)\n","37      0.1           (Green Mile, Harry Potter1, Sixth Sense)\n","38      0.1                   (LOTR2, Green Mile, Sixth Sense)\n","39      0.1                    (Green Mile, Sixth Sense, LOTR)\n","40      0.1                   (Braveheart, Gladiator, Patriot)\n","41      0.1                      (Gladiator, Green Mile, LOTR)\n","42      0.1                      (LOTR2, Harry Potter1, LOTR1)\n","43      0.1                 (Harry Potter1, Green Mile, LOTR1)\n","44      0.1                         (LOTR2, Green Mile, LOTR1)\n","45      0.1                 (LOTR2, Harry Potter1, Green Mile)\n","46      0.1         (Green Mile, Gladiator, Sixth Sense, LOTR)\n","47      0.1         (LOTR2, Harry Potter1, Sixth Sense, LOTR1)\n","48      0.1    (Green Mile, Harry Potter1, Sixth Sense, LOTR1)\n","49      0.1            (LOTR2, Green Mile, Sixth Sense, LOTR1)\n","50      0.1    (LOTR2, Green Mile, Harry Potter1, Sixth Sense)\n","51      0.1          (LOTR2, Harry Potter1, Green Mile, LOTR1)\n","52      0.1  (Green Mile, LOTR1, Sixth Sense, LOTR2, Harry ..."],"text/html":["\n","  <div id=\"df-478d93e1-1eef-414d-81e8-02afb27e0794\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.6</td>\n","      <td>(Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.7</td>\n","      <td>(Gladiator)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.2</td>\n","      <td>(LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.2</td>\n","      <td>(Harry Potter1)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.6</td>\n","      <td>(Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.2</td>\n","      <td>(LOTR2)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter2)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.1</td>\n","      <td>(LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.1</td>\n","      <td>(Braveheart)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.2</td>\n","      <td>(Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.5</td>\n","      <td>(Gladiator, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.1</td>\n","      <td>(Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.4</td>\n","      <td>(Sixth Sense, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.1</td>\n","      <td>(Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.2</td>\n","      <td>(Green Mile, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.6</td>\n","      <td>(Gladiator, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.1</td>\n","      <td>(Braveheart, Gladiator)</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0.2</td>\n","      <td>(LOTR2, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1)</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Harry Potter2)</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.1</td>\n","      <td>(Braveheart, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.4</td>\n","      <td>(Gladiator, Sixth Sense, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Gladiator, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>0.1</td>\n","      <td>(Braveheart, Gladiator, Patriot)</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>0.1</td>\n","      <td>(Gladiator, Green Mile, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>0.1</td>\n","      <td>(Harry Potter1, Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile)</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Gladiator, Sixth Sense, LOTR)</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, Harry Potter1, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Green Mile, Harry Potter1, Sixth Sense)</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>0.1</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, LOTR1)</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>0.1</td>\n","      <td>(Green Mile, LOTR1, Sixth Sense, LOTR2, Harry ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-478d93e1-1eef-414d-81e8-02afb27e0794')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-478d93e1-1eef-414d-81e8-02afb27e0794 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-478d93e1-1eef-414d-81e8-02afb27e0794');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# 90% confidence\n","rules2=association_rules(frequent_itemsets2,metric='lift',min_threshold=0.9)\n","rules2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"BNMUt7hjsJPC","executionInfo":{"status":"ok","timestamp":1683085115549,"user_tz":-330,"elapsed":7,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"0615b82f-f717-4ad1-bb73-47eff2204a4d"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         antecedents                                      consequents  \\\n","0        (Gladiator)                                    (Sixth Sense)   \n","1      (Sixth Sense)                                      (Gladiator)   \n","2      (Sixth Sense)                                        (Patriot)   \n","3          (Patriot)                                    (Sixth Sense)   \n","4      (Sixth Sense)                                           (LOTR)   \n","..               ...                                              ...   \n","233     (Green Mile)       (LOTR2, Harry Potter1, Sixth Sense, LOTR1)   \n","234          (LOTR1)  (LOTR2, Harry Potter1, Green Mile, Sixth Sense)   \n","235    (Sixth Sense)        (LOTR2, Harry Potter1, Green Mile, LOTR1)   \n","236          (LOTR2)  (Harry Potter1, Green Mile, Sixth Sense, LOTR1)   \n","237  (Harry Potter1)          (LOTR2, Green Mile, Sixth Sense, LOTR1)   \n","\n","     antecedent support  consequent support  support  confidence      lift  \\\n","0                   0.7                 0.6      0.5    0.714286  1.190476   \n","1                   0.6                 0.7      0.5    0.833333  1.190476   \n","2                   0.6                 0.6      0.4    0.666667  1.111111   \n","3                   0.6                 0.6      0.4    0.666667  1.111111   \n","4                   0.6                 0.1      0.1    0.166667  1.666667   \n","..                  ...                 ...      ...         ...       ...   \n","233                 0.2                 0.1      0.1    0.500000  5.000000   \n","234                 0.2                 0.1      0.1    0.500000  5.000000   \n","235                 0.6                 0.1      0.1    0.166667  1.666667   \n","236                 0.2                 0.1      0.1    0.500000  5.000000   \n","237                 0.2                 0.1      0.1    0.500000  5.000000   \n","\n","     leverage  conviction  \n","0        0.08        1.40  \n","1        0.08        1.80  \n","2        0.04        1.20  \n","3        0.04        1.20  \n","4        0.04        1.08  \n","..        ...         ...  \n","233      0.08        1.80  \n","234      0.08        1.80  \n","235      0.04        1.08  \n","236      0.08        1.80  \n","237      0.08        1.80  \n","\n","[238 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-c09e466c-f2b6-4b38-a5c9-638a21ff9cc0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(Gladiator)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.7</td>\n","      <td>0.6</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Gladiator)</td>\n","      <td>0.6</td>\n","      <td>0.7</td>\n","      <td>0.5</td>\n","      <td>0.833333</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Patriot)</td>\n","      <td>0.6</td>\n","      <td>0.6</td>\n","      <td>0.4</td>\n","      <td>0.666667</td>\n","      <td>1.111111</td>\n","      <td>0.04</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(Patriot)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.6</td>\n","      <td>0.6</td>\n","      <td>0.4</td>\n","      <td>0.666667</td>\n","      <td>1.111111</td>\n","      <td>0.04</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>(Green Mile)</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>(LOTR1)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, Sixth Sense)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, LOTR1)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>(LOTR2)</td>\n","      <td>(Harry Potter1, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>(Harry Potter1)</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>238 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c09e466c-f2b6-4b38-a5c9-638a21ff9cc0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c09e466c-f2b6-4b38-a5c9-638a21ff9cc0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c09e466c-f2b6-4b38-a5c9-638a21ff9cc0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# Lift Ratio > 1 is a good influential rule in selecting the associated transactions\n","rules2[rules2.lift>1]"],"metadata":{"id":"oobuPvdqsLrq","executionInfo":{"status":"ok","timestamp":1683085124737,"user_tz":-330,"elapsed":4,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"14da5e60-3502-4cea-ddd3-bbff63d76173","colab":{"base_uri":"https://localhost:8080/","height":572}},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         antecedents                                      consequents  \\\n","0        (Gladiator)                                    (Sixth Sense)   \n","1      (Sixth Sense)                                      (Gladiator)   \n","2      (Sixth Sense)                                        (Patriot)   \n","3          (Patriot)                                    (Sixth Sense)   \n","4      (Sixth Sense)                                           (LOTR)   \n","..               ...                                              ...   \n","233     (Green Mile)       (LOTR2, Harry Potter1, Sixth Sense, LOTR1)   \n","234          (LOTR1)  (LOTR2, Harry Potter1, Green Mile, Sixth Sense)   \n","235    (Sixth Sense)        (LOTR2, Harry Potter1, Green Mile, LOTR1)   \n","236          (LOTR2)  (Harry Potter1, Green Mile, Sixth Sense, LOTR1)   \n","237  (Harry Potter1)          (LOTR2, Green Mile, Sixth Sense, LOTR1)   \n","\n","     antecedent support  consequent support  support  confidence      lift  \\\n","0                   0.7                 0.6      0.5    0.714286  1.190476   \n","1                   0.6                 0.7      0.5    0.833333  1.190476   \n","2                   0.6                 0.6      0.4    0.666667  1.111111   \n","3                   0.6                 0.6      0.4    0.666667  1.111111   \n","4                   0.6                 0.1      0.1    0.166667  1.666667   \n","..                  ...                 ...      ...         ...       ...   \n","233                 0.2                 0.1      0.1    0.500000  5.000000   \n","234                 0.2                 0.1      0.1    0.500000  5.000000   \n","235                 0.6                 0.1      0.1    0.166667  1.666667   \n","236                 0.2                 0.1      0.1    0.500000  5.000000   \n","237                 0.2                 0.1      0.1    0.500000  5.000000   \n","\n","     leverage  conviction  \n","0        0.08        1.40  \n","1        0.08        1.80  \n","2        0.04        1.20  \n","3        0.04        1.20  \n","4        0.04        1.08  \n","..        ...         ...  \n","233      0.08        1.80  \n","234      0.08        1.80  \n","235      0.04        1.08  \n","236      0.08        1.80  \n","237      0.08        1.80  \n","\n","[236 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-aa740ab1-f8a4-45b4-b3f3-b844053c80c4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(Gladiator)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.7</td>\n","      <td>0.6</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Gladiator)</td>\n","      <td>0.6</td>\n","      <td>0.7</td>\n","      <td>0.5</td>\n","      <td>0.833333</td>\n","      <td>1.190476</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(Patriot)</td>\n","      <td>0.6</td>\n","      <td>0.6</td>\n","      <td>0.4</td>\n","      <td>0.666667</td>\n","      <td>1.111111</td>\n","      <td>0.04</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(Patriot)</td>\n","      <td>(Sixth Sense)</td>\n","      <td>0.6</td>\n","      <td>0.6</td>\n","      <td>0.4</td>\n","      <td>0.666667</td>\n","      <td>1.111111</td>\n","      <td>0.04</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>(Green Mile)</td>\n","      <td>(LOTR2, Harry Potter1, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>(LOTR1)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, Sixth Sense)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>(Sixth Sense)</td>\n","      <td>(LOTR2, Harry Potter1, Green Mile, LOTR1)</td>\n","      <td>0.6</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.166667</td>\n","      <td>1.666667</td>\n","      <td>0.04</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>(LOTR2)</td>\n","      <td>(Harry Potter1, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>(Harry Potter1)</td>\n","      <td>(LOTR2, Green Mile, Sixth Sense, LOTR1)</td>\n","      <td>0.2</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.500000</td>\n","      <td>5.000000</td>\n","      <td>0.08</td>\n","      <td>1.80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>236 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa740ab1-f8a4-45b4-b3f3-b844053c80c4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aa740ab1-f8a4-45b4-b3f3-b844053c80c4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aa740ab1-f8a4-45b4-b3f3-b844053c80c4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# visualization of obtained rule\n","plt.scatter(rules2['support'],rules2['confidence'])\n","plt.xlabel('support')\n","plt.ylabel('confidence')\n","plt.show()"],"metadata":{"id":"7MZA0rEcsOD-","executionInfo":{"status":"ok","timestamp":1683085133437,"user_tz":-330,"elapsed":559,"user":{"displayName":"Atharva bodhankar","userId":"10646386205367322832"}},"outputId":"50868fd6-246b-4e31-f335-b564596edcb7","colab":{"base_uri":"https://localhost:8080/","height":449}},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"adoI1e8lsP8d"},"execution_count":null,"outputs":[]}]}